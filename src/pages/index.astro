---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";

const POSTS_PER_PAGE = 5;
const url = new URL(import.meta.env.SITE + Astro.url.pathname);
const currentPage = parseInt(url.searchParams.get("page")) || 1;

const allPosts = await getCollection("blog");
const totalPages = Math.ceil(allPosts.length / POSTS_PER_PAGE);
const start = (currentPage - 1) * POSTS_PER_PAGE;
const end = start + POSTS_PER_PAGE;
const posts = allPosts.slice(start, end);

function getExcerpt(post) {
  return post.data.excerpt || post.body.slice(0, 350) + "...";
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      .centered-image {
        display: block;
        margin-left: auto;
        margin-right: auto;
        margin-top: 2rem;
        margin-bottom: 3rem;
        height: 12rem;
      }
      .post-list {
        display: flex;
        flex-direction: column;
        gap: 3rem;
      }

      .pagination {
        display: flex;
        justify-content: space-between;
        margin-top: 2rem;
      }
      .post {
        background: var(--off-white);
        height: auto;
        width: 100%;
        box-shadow: 0 2px 8px rgba(var(--black), 10%);
        display: flex;
        padding: 4rem;
        box-sizing: border-box;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }

      .post-title {
        font-size: 38px;
        font-weight: 500;
        margin: 0;
        text-decoration: none;
        color: var(--red);
      }

      .post-date {
        font-size: 14px;
        color: var(--gray-light);
        font-style: italic;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <img src="/logo.png" class="centered-image" />
      <div class="post-list">
        {
          posts.map((post) => {
            const excerpt = getExcerpt(post);
            return (
              <div class="post">
                <p class="post-date">
                  ðŸ™£ Posted on {<FormattedDate date={post.data.pubDate} />} ðŸ™ 
                </p>
                <h2>
                  <a class="post-title" href={`/blog/${post.slug}`}>
                    {post.data.title}
                  </a>
                </h2>
                <p class="post-excerpt">{excerpt}</p>
              </div>
            );
          })
        }
      </div>

      <div class="pagination">
        {currentPage > 1 && <a href={`/?page=${currentPage - 1}`}>Previous</a>}
        {
          currentPage < totalPages && (
            <a href={`/?page=${currentPage + 1}`}>Next</a>
          )
        }
      </div>
    </main>
    <Footer />
  </body>
</html>
